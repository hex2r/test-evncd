services:
  db:
    container_name: db
    image: postgres:17
    restart: always
    env_file:
      - "./node/.env"
    networks:
      - node-network
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    depends_on:
      - db
    networks:
      - node-network
    ports:
      - "5050:80"
    env_file:
      - "./node/.env"
    restart: unless-stopped
  backend:
    container_name: backend
    build:
      context: node
    working_dir: /usr/src/app
    networks:
      - node-network
    volumes:
      - ./node:/usr/src/app
      - backend_node_modules:/usr/src/app/node_modules
    tty: true
    ports:
      - "3000:3000"
    command: npm start
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: react
    working_dir: /usr/src/app
    networks:
      - node-network
    volumes:
      - ./react:/usr/src/app
      - /usr/src/app/node_modules
    tty: true
    ports:
      - "5173:5173"
    command: npm run dev
    depends_on:
      - db
      - backend

  nginx:
    build:
      context: nginx
    container_name: nginx
    restart: always
    tty: true
    ports:
      - "8000:80"
    networks:
      - node-network
    depends_on:
      - backend
      - frontend

networks:
  node-network:
    driver: bridge
volumes:
  backend_node_modules:
  postgres-data:
